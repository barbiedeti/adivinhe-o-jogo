
# ====================== Avalia√ß√£o de Programa√ß√£o 1 2024.2 =========================

# Jogo: Adivinhe o N√∫mero Secreto

import random
from time import sleep
import threading

# Fun√ß√£o para gerar o n√∫mero secreto
def gerar_numero_secreto():
    digito_um = [str(i) for i in range (1, 10) if i != 6] #garente que o primeiro n√∫mero n√£o ser√° 0 ou 6
    digitos = [str(i) for i in range(0, 10) if i != 6] #restante do n√∫mero podendo ter 0, excluindo o 6
    while True:
        primeiro = random.choice(digito_um) #escolhe o primeiro numero
        restantes = random.sample(digitos, 2) #escolhe os 2 ultimos numeros
        numero_secreto = primeiro + ''.join(restantes) #junta para o numero secreto
        if len(set(numero_secreto)) == 3:
            return numero_secreto

# Fun√ß√£o para verificar o palpite do jogador
def verificar_palpite(palpite, numero_secreto):
    resultado = []
    for i in range(3):
        if palpite[i] == numero_secreto[i]:
            resultado.append('üü¢')  # Algarismo correto e na posi√ß√£o correta
        elif palpite[i] in numero_secreto:
            resultado.append('üü°')  # Algarismo correto, mas na posi√ß√£o errada
    return resultado

# Fun√ß√£o principal do jogo
def jogar():
    numero_secreto = gerar_numero_secreto()
    tentativas = 5
    print("Bem-vindo ao jogo! Tente adivinhar o n√∫mero secreto que est√° entre 100 e 999 (sem o d√≠gito 6)."); sleep(1)
    print("Voc√™ tem 5 tentativas. Ap√≥s cada palpite, ser√£o exibidas bolinhas verdes ou amarelas como dicas."); sleep(1)
    print("üü¢ = n√∫mero certo na posi√ß√£o certa | üü° = n√∫mero certo na posi√ß√£o errada"); sleep(1)
    print("Mas Aten√ß√£o! A ordem das bolinhas n√£o corresponde √† posi√ß√£o exata do n√∫mero."); sleep(1)
    
    for tentativa in range(1, tentativas + 1):
        palpite = input(f"Tentativa {tentativa}: ")
        if len(palpite) != 3 or not palpite.isdigit() or '6' in palpite or len(set(palpite)) != 3 or palpite[0] == '0':
            print("Analisando..."); sleep(1)
            if palpite[0] == '0':
                print("Palpite inv√°lido! O n√∫mero n√£o pode come√ßar com 0.")
            else:
                print("Palpite inv√°lido! Insira um n√∫mero de 3 d√≠gitos, sem repeti√ß√£o de algarismos e sem o n√∫mero 6.")
            continue
        
        if palpite == numero_secreto:
            print("Analisando..."); sleep(1)
            print(f"Parab√©ns! Voc√™ adivinhou o n√∫mero secreto {numero_secreto} na tentativa {tentativa}.")
            break
        
        resultado = verificar_palpite(palpite, numero_secreto)
        if resultado:
            print("Analisando..."); sleep(1)
            print("N√£o √© bem esse n√∫mero ainda... ü´¢")
            print("Dica:", ' '.join(resultado))
        else:
            print("Analisando..."); sleep(1)
            print("Algo de errado n√£o est√° certo... ü§î"); sleep(1)
            print("Nenhum n√∫mero est√° correto.")
    
    else:
        print(f"Voc√™ perdeu! O n√∫mero secreto era {numero_secreto}.")

#Fun√ß√£o para reiniciar o jogo
def reiniciar_jogo():
    print("\nTempo esgostado! Reiniciando o jogo...\n")
    iniciar_jogo()

def iniciar_jogo():
    while True:
        jogar()
        timeout_thread = threading.Timer(10.0, reiniciar_jogo)
        timeout_thread.start()

        continuar = input("Deseja jogar novamente? (s/n): ")

        if continuar.lower() != 'S'.lower():
            print("Obrigado por jogar! At√© a pr√≥xima.")
            break

# Rodar o jogo
iniciar_jogo()